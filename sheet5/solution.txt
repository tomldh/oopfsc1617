Exercise 3 Inheritance and Functions

#include <iostream>

class A
{
  public:
    void foo() const { std::cout << "A::foo" << std::endl;}
};

class B : public A
{
  public:
    void foo() { std::cout << "B::foo" << std::endl;}
};

class C : private B
{
  public:
    void bar() { foo(); }
};

void test(const A& a) { a.foo(); }

int main() {
  
  A a; B b; C c;
  a.foo(); //output: A::foo
  b.foo(); //output: B::foo
  test(b); //output: A::foo
  c.bar(); //output: B::foo
  test(c); //error. Due to private inheritance, foo() becomes private in class C and thus not accessible.
  
  
  return 0;
}
